{"version":3,"sources":["Success.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Success","password","Array","fill","reduce","atob","App","React","useState","formState","setFormState","className","onSubmit","e","attempt","currentTarget","value","setTimeout","preventDefault","htmlFor","id","name","type","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAEO,SAASA,IACd,OAAO,0CCCT,IAAMC,EAAW,IAAIC,MAAM,IACxBC,KAAK,MACLC,OACCC,KACA,oJA+CWC,MA5Cf,WACE,MAAkCC,IAAMC,SAEtC,YAFF,mBAAOC,EAAP,KAAkBC,EAAlB,KAIA,OACE,qBAAKC,UAAU,MAAf,SACiB,UAAdF,EACC,cAACT,EAAD,IAEA,sBAAKW,UAAU,YAAf,UACE,uCACA,uBACEA,UAAWF,EACXG,SAAU,SAACC,GACTH,EAAa,cACb,IAAMI,EAAUD,EAAEE,cAAcd,SAASe,MACzCC,YAAW,WACTP,EAAaI,IAAYb,EAAW,QAAU,aAC7C,KACHY,EAAEK,kBARN,UAWE,sBAAKP,UAAU,aAAf,UACE,uBAAOQ,QAAQ,WAAf,uBACA,uBAAOC,GAAG,WAAWC,KAAK,WAAWC,KAAK,aAC3B,YAAdb,GACC,qBAAKE,UAAU,aAAf,yDAGJ,qBAAKA,UAAU,oBAAf,SACE,uBACEW,KAAK,SACLN,MAAqB,eAAdP,EAA6B,gBAAkB,SACtDc,SAAwB,eAAdd,eC/BXe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b30966ae.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Success() {\n  return <div>success</div>;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Success } from \"./Success\";\n\nconst password = new Array(10)\n  .fill(null)\n  .reduce(\n    atob,\n    \"Vm0wd2VHUXhUWGROVldoVFlteEtXRmxVU205V1JsbDNXa1JTVjJKSGVEQlpNM0JIVmpGYWRHVkliRmROYWxaeVZtcEJlRmRIVmtWUmJVWlhWakpvVFZac1ZtRldNVnBXVFZWV2FHVnFRVGs9\"\n  );\n\nfunction App() {\n  const [formState, setFormState] = React.useState<\n    \"pristine\" | \"validating\" | \"invalid\" | \"valid\"\n  >(\"pristine\");\n\n  return (\n    <div className=\"App\">\n      {formState === \"valid\" ? (\n        <Success />\n      ) : (\n        <div className=\"loginForm\">\n          <h1>Login</h1>\n          <form\n            className={formState}\n            onSubmit={(e) => {\n              setFormState(\"validating\");\n              const attempt = e.currentTarget.password.value;\n              setTimeout(() => {\n                setFormState(attempt === password ? \"valid\" : \"invalid\");\n              }, 500);\n              e.preventDefault();\n            }}\n          >\n            <div className=\"fieldGroup\">\n              <label htmlFor=\"password\">Password:</label>\n              <input id=\"password\" name=\"password\" type=\"password\" />\n              {formState === \"invalid\" && (\n                <div className=\"fieldError\">Password invalid. Try again ðŸ˜›</div>\n              )}\n            </div>\n            <div className=\"fieldGroup submit\">\n              <input\n                type=\"submit\"\n                value={formState === \"validating\" ? \"Logging in...\" : \"Log in\"}\n                disabled={formState === \"validating\"}\n              />\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}